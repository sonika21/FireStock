{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","add","createdAt","Date","ProgressBar","setFile","console","log","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","map","key","layout","whileHover","opacity","onClick","img","src","alt","transition","delay","Modal","selectedImg","classList","contains","y","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7285e3d1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Title = () => {\r\n  return (\r\n    <div className=\"title\">\r\n      <h1>FireStock</h1>\r\n      <h2>@herthoughts_in_sky</h2>\r\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/storage\";\r\nimport \"firebase/compat/firestore\";\r\nimport { initializeApp } from \"firebase/app\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDhn2razwYg3_mh_LpBF-KcnOtepptXRjs\",\r\n  authDomain: \"firestock-deece.firebaseapp.com\",\r\n  projectId: \"firestock-deece\",\r\n  storageBucket: \"firestock-deece.appspot.com\",\r\n  messagingSenderId: \"420177688883\",\r\n  appId: \"1:420177688883:web:29f13ffc62e8147fe92646\",\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nconst projectStorage = firebase.storage();\r\nconst projectFirestore = firebase.firestore();\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport { projectStorage, projectFirestore, timestamp };\r\n","import { useState, useEffect } from \"react\";\r\nimport {\r\n  projectStorage,\r\n  projectFirestore,\r\n  timestamp,\r\n} from \"../firebase/config\";\r\n\r\nconst useStorage = (file) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // references\r\n    const storageRef = projectStorage.ref(file.name);\r\n    const collectionRef = projectFirestore.collection(\"images\");\r\n\r\n    storageRef.put(file).on(\r\n      \"state_changed\",\r\n      (snap) => {\r\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n        setProgress(percentage);\r\n      },\r\n      (err) => {\r\n        setError(err);\r\n      },\r\n      async () => {\r\n        const url = await storageRef.getDownloadURL();\r\n        const createdAt = timestamp();\r\n        collectionRef.add({ url: url, createdAt: new Date() });\r\n        setUrl(url);\r\n      }\r\n    );\r\n  }, [file]);\r\n\r\n  return { progress, url, error };\r\n};\r\n\r\nexport default useStorage;\r\n","import React, { useEffect } from \"react\";\r\nimport useStorage from \"../hooks/useStorage\";\r\nimport { AnimatePresence, motion } from \"framer-motion/dist/framer-motion\";\r\n\r\nconst ProgressBar = ({ file, setFile }) => {\r\n  const { url, progress } = useStorage(file);\r\n  console.log(progress, url);\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      setFile(null);\r\n    }\r\n  }, [url]);\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"progress-bar\"\r\n      initial={{ width: 0 }}\r\n      animate={{ width: progress + \"%\" }}\r\n    ></motion.div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React, { useState } from \"react\";\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\nfunction UploadForm() {\r\n  const [file, setFile] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const types = [\"image/png\", \"image/jpeg\", \"image/jpg\"];\r\n\r\n  const changeHandler = (e) => {\r\n    let selected = e.target.files[0];\r\n\r\n    if (selected && types.includes(selected.type)) {\r\n      setFile(selected);\r\n      setError(\"\");\r\n    } else {\r\n      setFile(null);\r\n      setError(\"Please select an image file (png, jpeg, jpg)\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <input type=\"file\" onChange={changeHandler} />\r\n      <div className=\"output\">\r\n        {error && <div className=\"error\">{error}</div>}\r\n        {file && <div>{file.name}</div>}\r\n        {file && <ProgressBar file={file} setFile={setFile} />}\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default UploadForm;\r\n","import { useState, useEffect } from \"react\";\r\nimport { projectFirestore } from \"../firebase/config\";\r\n\r\nconst useFirestore = (collection) => {\r\n  const [docs, setDocs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const unsub = projectFirestore\r\n      .collection(collection)\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snap) => {\r\n        let documents = [];\r\n        snap.forEach((doc) => {\r\n          documents.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        setDocs(documents);\r\n      });\r\n\r\n    return () => unsub();\r\n  }, [collection]);\r\n\r\n  return { docs };\r\n};\r\n\r\nexport default useFirestore;\r\n","import React from \"react\";\r\nimport useFirestore from \"../hooks/useFirestore\";\r\nimport { AnimatePresence, motion } from \"framer-motion/dist/framer-motion\";\r\n\r\nfunction ImageGrid({ setSelectedImg }) {\r\n  const { docs } = useFirestore(\"images\");\r\n  console.log(docs);\r\n\r\n  return (\r\n    <div className=\"img-grid\">\r\n      {docs &&\r\n        docs.map((doc) => (\r\n          <motion.div\r\n            className=\"img-wrap\"\r\n            key={doc.id}\r\n            layout\r\n            whileHover={{ opacity: 1 }}\r\n            onClick={() => setSelectedImg(doc.url)}\r\n          >\r\n            <motion.img\r\n              src={doc.url}\r\n              alt=\"uploaded\"\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              transition={{ delay: 1 }}\r\n            />\r\n          </motion.div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageGrid;\r\n","import React from \"react\";\r\nimport { AnimatePresence, motion } from \"framer-motion/dist/framer-motion\";\r\n\r\nfunction Modal({ selectedImg, setSelectedImg }) {\r\n  const handleClick = (e) => {\r\n    if (e.target.classList.contains(\"backdrop\")) {\r\n      setSelectedImg(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"backdrop\"\r\n      onClick={handleClick}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n    >\r\n      <motion.img\r\n        src={selectedImg}\r\n        alt=\"selected pic\"\r\n        initial={{ y: \"-100vh\" }}\r\n        animate={{ y: 0 }}\r\n      />\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport Title from \"./comps/Title\";\r\nimport UploadForm from \"./comps/UploadForm\";\r\nimport ImageGrid from \"./comps/ImageGrid\";\r\nimport Modal from \"./comps/Modal\";\r\n\r\nfunction App() {\r\n  const [selectedImg, setSelectedImg] = useState(null);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Title />\r\n      <UploadForm />\r\n      <ImageGrid setSelectedImg={setSelectedImg} />\r\n      {selectedImg && (\r\n        <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}